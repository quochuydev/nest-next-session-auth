# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Setup infra docker
      - run: (cd infra/e2e && docker-compose up -d)
      - run: docker ps
      # - name: Setup web
      - run: (cd web && yarn)
      - run: (cd web && yarn export)
      - run: (cd web && yarn start) &
      - run: until nc -z localhost 3001; do echo 'Wait web to startup...' && sleep 5; done;
      # - name: Setup backend
      - run: (cd api && yarn)
      - run: (cd api && yarn build)
      - run: (cd api && yarn migration:e2e:run)
      - run: (cd api && yarn start:e2e) &
      - run: until nc -z localhost 4000; do echo 'Wait backend to startup...' && sleep 5; done;
      # - name: Run test
      - run: (cd e2e && yarn)
      - run: (cd e2e && yarn test)
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-results
          path: test-results

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Setup infra docker
      - run: (cd infra/prod && docker-compose up -d)
      # - name: Setup web
      - run: (cd web && yarn)
      - run: (cd web && yarn export)
      - run: (cd web && yarn start) &
      - run: until nc -z localhost 3001; do echo 'Wait web to startup...' && sleep 5; done;
      # - name: Setup backend
      - run: (cd api && yarn)
      - run: (cd api && yarn migration:run)
      - run: (cd api && yarn build)
      - run: (cd api && yarn start:prod) &
      - run: until nc -z localhost 4000; do echo 'Wait backend to startup...' && sleep 5; done;
